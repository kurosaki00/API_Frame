[pytest]
# addopts的常用参数如下：
# -vs 输出详细的信息和调试的信息
# -n=2 多线程
# --reruns=2 失败用例重跑
# -x 失败1次就终止用例的执行
# --maxfail=2 失败2次就终止用例的执行（2个用例失败）
# --html=./reports/report.html 生成html报告
# -m "smoke or baili" 执行指定标记的用例,标记名自定义，多个标记用or
# --alluredir=./temps --clean-alluredir 默认会生成临时的json报告，--clean-alluredir会覆盖上一次的报告

#命令行参数，多个参数之间用空格分开
addopts = -vs --alluredir=./temps --clean-alluredir
#指定测试用例的文件夹
testpaths = ./testcases
#修改默认的模块规则
python_files = test_*.py
#修改默认的类的规则
python_classes = Test*
#修改默认的测试用例的规则
python_functions = test_*
#环境变量,固定写法
base_url = http://101.34.221.219:8010/api.php?s=
#用例标记
markers =
    smoke:冒烟用例
    product_manage:商品管理


# 日志配置

# 设置为1日志更详细
log_cli = 0
# 日志级别，共5个，由低到高：debug,info,warning,error,critical
log_file_level = info
# 日志格式
# [%(asctime)s]时间，%(filename)s哪个文件，%(funcName)s函数名，line:%(lineno)d文件的多少行，[%(levelname)s]日志级别，%(message)s日志信息
;log_file_format = [%(asctime)s] %(filename)s->%(funcName)s line:%(lineno)d [%(levelname)s] %(message)s
log_file_format = [%(asctime)s] %(filename)s->%(funcName)s line:%(lineno)d %(levelname)s %(message)s
# 日志时间
log_file_date_format = %Y:%m:%d %H:%M:%S
# 日志文件存储位置
log_file = ./logs/frame.log


[apitest]   # test_b2c1.yaml中的公共参数params
application: app
application_client_type: h5

